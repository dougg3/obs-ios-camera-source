name: Build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
    runs-on: ${{matrix.os}}
    steps:
    - name: Check Plugin sources
      uses: actions/checkout@v2
      with:
        repository: dougg3/obs-ios-camera-source

    - name: Install build dependencies
      run: sudo add-apt-repository -y ppa:obsproject/obs-studio && sudo apt-get install ffmpeg obs-studio libavcodec-dev libssl-dev pkg-config

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake ${{runner.workspace}}/obs-ios-camera-source

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: make -j$(nproc)
    
    - name: Prepare package
      working-directory: ${{runner.workspace}}
      shell: bash
      run: mkdir -p package/.config/obs-studio/plugins/obs-ios-camera-source/{data/locale,bin/64bit} &&
        cp build/obs-ios-camera-source.so package/.config/obs-studio/plugins/obs-ios-camera-source/bin/64bit &&
        cp obs-ios-camera-source/data/locale/* package/.config/obs-studio/plugins/obs-ios-camera-source/data/locale

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-${{matrix.os}}
        path: ${{runner.workspace}}/package
        include-hidden-files: true
